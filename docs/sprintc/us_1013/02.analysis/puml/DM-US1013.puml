@startuml

title Domain Model - US1013

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

class PhoneNumber <<valueObject>> <<(V, #FF8B40)>> {}
class Email <<valueObject>> <<(V, #FF8B40)>> {}

' Rank Aggregate
package "<<aggregate>> Rank" {
    entity Rank <<entity>> <<root>> {}
}

' Candidate Aggregate
package "<<aggregate>> Candidate" {
    entity Candidate <<entity>> <<root>> {}

    class FirstName <<valueObject>> <<(V, #FF8B40)>> {}
    class LastName <<valueObject>> <<(V, #FF8B40)>> {}
}

' Application Aggregate
package "<<aggregate>> Application" {
    entity Application <<entity>> <<root>> {}
    entity Result <<entity>> {}

    class ApplicationDate <<valueObject>> <<(V, #FF8B40)>> {}
    class ApplicationNumber <<valueObject>> <<(V, #FF8B40)>> {}
    class Outcome <<valueObject>> <<(V, #FF8B40)>> {}
    class Justification <<valueObject>> <<(V, #FF8B40)>> {}

    note right of Outcome: Outcome can be Approved or Rejected
    note left of Justification: Rejected outcomes must have a justification
}

class CompanyName <<valueObject>> <<(V, #FF8B40)>> {}

' Job Opening Aggregate
package "<<aggregate>> Job Opening" {
    entity JobOpening <<entity>> <<root>> {}

    class JobReference <<valueObject>> <<(V, #FF8B40)>> {}
    class TitleOrFunction <<valueObject>> <<(V, #FF8B40)>> {}
    class ContractType <<valueObject>> <<(V, #FF8B40)>> {}
    class Mode <<valueObject>> <<(V, #FF8B40)>> {}
    class NumberOfVacancies <<valueObject>> <<(V, #FF8B40)>> {}
    class JobDescription <<valueObject>> <<(V, #FF8B40)>> {}
    entity RequirementSpecification <<entity>> {}
}

' Interview Aggregate
package "<<aggregate>> Interview" {
    entity Interview <<entity>> <<root>> {}

    class InterviewDate <<valueObject>> <<(V, #FF8B40)>> {}
    class InterviewTime <<valueObject>> <<(V, #FF8B40)>> {}
}

class Address <<valueObject>> <<(V, #FF8B40)>> {}

' Job Opening relationships
JobOpening "1" --> "1" JobReference : has
JobOpening "1" --> "1" TitleOrFunction : has
JobOpening "1" --> "1" ContractType : has
JobOpening "1" --> "1" Mode : has
JobOpening "1" --> "1" Address : has
JobOpening "1" --> "1" CompanyName : has
JobOpening "1" --> "1" NumberOfVacancies : has
JobOpening "1" --> "1" JobDescription : has
JobOpening "1" --> "1" RequirementSpecification: has
JobOpening "1" -down--> "1" Interview : can have

' Candidate relationships
Candidate "1" --> "1" FirstName : has
Candidate "1" --> "1" LastName : has
Candidate "1" --> "1" PhoneNumber : has
Candidate "1" --> "1" Email : has

' Rank relationships
Rank "1" --> "1" JobOpening : for

' Application relationships
Application "1" --> "1" ApplicationDate : has
Application "1" --> "1" ApplicationNumber : has
Application "1" --> "0..1" Result : has
Application "1" --> "1" JobOpening : for
Application "1" --> "1" Candidate : from

' Result relationships
Result "1" --> "1" Outcome : has
Result "1" --> "1" Justification : can have

' Interview relationships
Interview "1" --> "1" InterviewDate : has
Interview "1" --> "1" InterviewTime : has


@enduml