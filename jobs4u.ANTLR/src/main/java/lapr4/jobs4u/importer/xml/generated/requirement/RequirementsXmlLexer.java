package lapr4.jobs4u.importer.xml.generated.requirement;
// Generated from RequirementsXml.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class RequirementsXmlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, TWO_DIGIT_NUMBER=15, 
		NUMBER=16, LETTER=17, MEMBER=18, FRACTIONAL_NUMBER=19, TEXT=20, WS=21;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "TWO_DIGIT_NUMBER", "NUMBER", 
			"LETTER", "MEMBER", "FRACTIONAL_NUMBER", "TEXT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'<Questions>'", "'</Questions>'", "'<Question>'", "'</Question>'", 
			"'<Body>'", "'<'", "'/'", "'>'", "'</'", "'</Body>'", "'<PossibleAnswersList>'", 
			"'</PossibleAnswersList>'", "'<PossibleAnswers>'", "'</PossibleAnswers>'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "TWO_DIGIT_NUMBER", "NUMBER", "LETTER", "MEMBER", "FRACTIONAL_NUMBER", 
			"TEXT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RequirementsXmlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "RequirementsXml.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0015\u00e2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0003\u000e\u00c8\b\u000e\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0003\u0011\u00cf\b\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0004\u0013"+
		"\u00d8\b\u0013\u000b\u0013\f\u0013\u00d9\u0001\u0014\u0004\u0014\u00dd"+
		"\b\u0014\u000b\u0014\f\u0014\u00de\u0001\u0014\u0001\u0014\u0000\u0000"+
		"\u0015\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015\u0001\u0000"+
		"\u0005\u0001\u000009\u0002\u0000AZaz\b\u0000!!##\'/:;?@[[]]||\u0002\u0000"+
		",,..\u0003\u0000\t\n\r\r  \u00e6\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001"+
		"\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000"+
		"\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000"+
		"\u0000)\u0001\u0000\u0000\u0000\u0001+\u0001\u0000\u0000\u0000\u00037"+
		"\u0001\u0000\u0000\u0000\u0005D\u0001\u0000\u0000\u0000\u0007O\u0001\u0000"+
		"\u0000\u0000\t[\u0001\u0000\u0000\u0000\u000bb\u0001\u0000\u0000\u0000"+
		"\rd\u0001\u0000\u0000\u0000\u000ff\u0001\u0000\u0000\u0000\u0011h\u0001"+
		"\u0000\u0000\u0000\u0013k\u0001\u0000\u0000\u0000\u0015s\u0001\u0000\u0000"+
		"\u0000\u0017\u0089\u0001\u0000\u0000\u0000\u0019\u00a0\u0001\u0000\u0000"+
		"\u0000\u001b\u00b2\u0001\u0000\u0000\u0000\u001d\u00c5\u0001\u0000\u0000"+
		"\u0000\u001f\u00c9\u0001\u0000\u0000\u0000!\u00cb\u0001\u0000\u0000\u0000"+
		"#\u00ce\u0001\u0000\u0000\u0000%\u00d0\u0001\u0000\u0000\u0000\'\u00d7"+
		"\u0001\u0000\u0000\u0000)\u00dc\u0001\u0000\u0000\u0000+,\u0005<\u0000"+
		"\u0000,-\u0005Q\u0000\u0000-.\u0005u\u0000\u0000./\u0005e\u0000\u0000"+
		"/0\u0005s\u0000\u000001\u0005t\u0000\u000012\u0005i\u0000\u000023\u0005"+
		"o\u0000\u000034\u0005n\u0000\u000045\u0005s\u0000\u000056\u0005>\u0000"+
		"\u00006\u0002\u0001\u0000\u0000\u000078\u0005<\u0000\u000089\u0005/\u0000"+
		"\u00009:\u0005Q\u0000\u0000:;\u0005u\u0000\u0000;<\u0005e\u0000\u0000"+
		"<=\u0005s\u0000\u0000=>\u0005t\u0000\u0000>?\u0005i\u0000\u0000?@\u0005"+
		"o\u0000\u0000@A\u0005n\u0000\u0000AB\u0005s\u0000\u0000BC\u0005>\u0000"+
		"\u0000C\u0004\u0001\u0000\u0000\u0000DE\u0005<\u0000\u0000EF\u0005Q\u0000"+
		"\u0000FG\u0005u\u0000\u0000GH\u0005e\u0000\u0000HI\u0005s\u0000\u0000"+
		"IJ\u0005t\u0000\u0000JK\u0005i\u0000\u0000KL\u0005o\u0000\u0000LM\u0005"+
		"n\u0000\u0000MN\u0005>\u0000\u0000N\u0006\u0001\u0000\u0000\u0000OP\u0005"+
		"<\u0000\u0000PQ\u0005/\u0000\u0000QR\u0005Q\u0000\u0000RS\u0005u\u0000"+
		"\u0000ST\u0005e\u0000\u0000TU\u0005s\u0000\u0000UV\u0005t\u0000\u0000"+
		"VW\u0005i\u0000\u0000WX\u0005o\u0000\u0000XY\u0005n\u0000\u0000YZ\u0005"+
		">\u0000\u0000Z\b\u0001\u0000\u0000\u0000[\\\u0005<\u0000\u0000\\]\u0005"+
		"B\u0000\u0000]^\u0005o\u0000\u0000^_\u0005d\u0000\u0000_`\u0005y\u0000"+
		"\u0000`a\u0005>\u0000\u0000a\n\u0001\u0000\u0000\u0000bc\u0005<\u0000"+
		"\u0000c\f\u0001\u0000\u0000\u0000de\u0005/\u0000\u0000e\u000e\u0001\u0000"+
		"\u0000\u0000fg\u0005>\u0000\u0000g\u0010\u0001\u0000\u0000\u0000hi\u0005"+
		"<\u0000\u0000ij\u0005/\u0000\u0000j\u0012\u0001\u0000\u0000\u0000kl\u0005"+
		"<\u0000\u0000lm\u0005/\u0000\u0000mn\u0005B\u0000\u0000no\u0005o\u0000"+
		"\u0000op\u0005d\u0000\u0000pq\u0005y\u0000\u0000qr\u0005>\u0000\u0000"+
		"r\u0014\u0001\u0000\u0000\u0000st\u0005<\u0000\u0000tu\u0005P\u0000\u0000"+
		"uv\u0005o\u0000\u0000vw\u0005s\u0000\u0000wx\u0005s\u0000\u0000xy\u0005"+
		"i\u0000\u0000yz\u0005b\u0000\u0000z{\u0005l\u0000\u0000{|\u0005e\u0000"+
		"\u0000|}\u0005A\u0000\u0000}~\u0005n\u0000\u0000~\u007f\u0005s\u0000\u0000"+
		"\u007f\u0080\u0005w\u0000\u0000\u0080\u0081\u0005e\u0000\u0000\u0081\u0082"+
		"\u0005r\u0000\u0000\u0082\u0083\u0005s\u0000\u0000\u0083\u0084\u0005L"+
		"\u0000\u0000\u0084\u0085\u0005i\u0000\u0000\u0085\u0086\u0005s\u0000\u0000"+
		"\u0086\u0087\u0005t\u0000\u0000\u0087\u0088\u0005>\u0000\u0000\u0088\u0016"+
		"\u0001\u0000\u0000\u0000\u0089\u008a\u0005<\u0000\u0000\u008a\u008b\u0005"+
		"/\u0000\u0000\u008b\u008c\u0005P\u0000\u0000\u008c\u008d\u0005o\u0000"+
		"\u0000\u008d\u008e\u0005s\u0000\u0000\u008e\u008f\u0005s\u0000\u0000\u008f"+
		"\u0090\u0005i\u0000\u0000\u0090\u0091\u0005b\u0000\u0000\u0091\u0092\u0005"+
		"l\u0000\u0000\u0092\u0093\u0005e\u0000\u0000\u0093\u0094\u0005A\u0000"+
		"\u0000\u0094\u0095\u0005n\u0000\u0000\u0095\u0096\u0005s\u0000\u0000\u0096"+
		"\u0097\u0005w\u0000\u0000\u0097\u0098\u0005e\u0000\u0000\u0098\u0099\u0005"+
		"r\u0000\u0000\u0099\u009a\u0005s\u0000\u0000\u009a\u009b\u0005L\u0000"+
		"\u0000\u009b\u009c\u0005i\u0000\u0000\u009c\u009d\u0005s\u0000\u0000\u009d"+
		"\u009e\u0005t\u0000\u0000\u009e\u009f\u0005>\u0000\u0000\u009f\u0018\u0001"+
		"\u0000\u0000\u0000\u00a0\u00a1\u0005<\u0000\u0000\u00a1\u00a2\u0005P\u0000"+
		"\u0000\u00a2\u00a3\u0005o\u0000\u0000\u00a3\u00a4\u0005s\u0000\u0000\u00a4"+
		"\u00a5\u0005s\u0000\u0000\u00a5\u00a6\u0005i\u0000\u0000\u00a6\u00a7\u0005"+
		"b\u0000\u0000\u00a7\u00a8\u0005l\u0000\u0000\u00a8\u00a9\u0005e\u0000"+
		"\u0000\u00a9\u00aa\u0005A\u0000\u0000\u00aa\u00ab\u0005n\u0000\u0000\u00ab"+
		"\u00ac\u0005s\u0000\u0000\u00ac\u00ad\u0005w\u0000\u0000\u00ad\u00ae\u0005"+
		"e\u0000\u0000\u00ae\u00af\u0005r\u0000\u0000\u00af\u00b0\u0005s\u0000"+
		"\u0000\u00b0\u00b1\u0005>\u0000\u0000\u00b1\u001a\u0001\u0000\u0000\u0000"+
		"\u00b2\u00b3\u0005<\u0000\u0000\u00b3\u00b4\u0005/\u0000\u0000\u00b4\u00b5"+
		"\u0005P\u0000\u0000\u00b5\u00b6\u0005o\u0000\u0000\u00b6\u00b7\u0005s"+
		"\u0000\u0000\u00b7\u00b8\u0005s\u0000\u0000\u00b8\u00b9\u0005i\u0000\u0000"+
		"\u00b9\u00ba\u0005b\u0000\u0000\u00ba\u00bb\u0005l\u0000\u0000\u00bb\u00bc"+
		"\u0005e\u0000\u0000\u00bc\u00bd\u0005A\u0000\u0000\u00bd\u00be\u0005n"+
		"\u0000\u0000\u00be\u00bf\u0005s\u0000\u0000\u00bf\u00c0\u0005w\u0000\u0000"+
		"\u00c0\u00c1\u0005e\u0000\u0000\u00c1\u00c2\u0005r\u0000\u0000\u00c2\u00c3"+
		"\u0005s\u0000\u0000\u00c3\u00c4\u0005>\u0000\u0000\u00c4\u001c\u0001\u0000"+
		"\u0000\u0000\u00c5\u00c7\u0003\u001f\u000f\u0000\u00c6\u00c8\u0003\u001f"+
		"\u000f\u0000\u00c7\u00c6\u0001\u0000\u0000\u0000\u00c7\u00c8\u0001\u0000"+
		"\u0000\u0000\u00c8\u001e\u0001\u0000\u0000\u0000\u00c9\u00ca\u0007\u0000"+
		"\u0000\u0000\u00ca \u0001\u0000\u0000\u0000\u00cb\u00cc\u0007\u0001\u0000"+
		"\u0000\u00cc\"\u0001\u0000\u0000\u0000\u00cd\u00cf\u0007\u0002\u0000\u0000"+
		"\u00ce\u00cd\u0001\u0000\u0000\u0000\u00cf$\u0001\u0000\u0000\u0000\u00d0"+
		"\u00d1\u0003\u001d\u000e\u0000\u00d1\u00d2\u0007\u0003\u0000\u0000\u00d2"+
		"\u00d3\u0003\u001d\u000e\u0000\u00d3&\u0001\u0000\u0000\u0000\u00d4\u00d8"+
		"\u0003!\u0010\u0000\u00d5\u00d8\u0003\u001d\u000e\u0000\u00d6\u00d8\u0003"+
		"#\u0011\u0000\u00d7\u00d4\u0001\u0000\u0000\u0000\u00d7\u00d5\u0001\u0000"+
		"\u0000\u0000\u00d7\u00d6\u0001\u0000\u0000\u0000\u00d8\u00d9\u0001\u0000"+
		"\u0000\u0000\u00d9\u00d7\u0001\u0000\u0000\u0000\u00d9\u00da\u0001\u0000"+
		"\u0000\u0000\u00da(\u0001\u0000\u0000\u0000\u00db\u00dd\u0007\u0004\u0000"+
		"\u0000\u00dc\u00db\u0001\u0000\u0000\u0000\u00dd\u00de\u0001\u0000\u0000"+
		"\u0000\u00de\u00dc\u0001\u0000\u0000\u0000\u00de\u00df\u0001\u0000\u0000"+
		"\u0000\u00df\u00e0\u0001\u0000\u0000\u0000\u00e0\u00e1\u0006\u0014\u0000"+
		"\u0000\u00e1*\u0001\u0000\u0000\u0000\u0006\u0000\u00c7\u00ce\u00d7\u00d9"+
		"\u00de\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}